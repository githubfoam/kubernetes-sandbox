- hosts: all
  become: yes
  vars:
    # kubernetes_version : "=1.15.2-00"
    # validated_dockerv: "=5:18.09.8~3-0~ubuntu-xenial"
    kubernetes_version : "=1.14.5-00" # k8s-conformance sonobuoy test CLı
    validated_dockerv: "=5:18.09.5~3-0~ubuntu-xenial" # k8s-conformance sonobuoy test CLı
    ansible_python_interpreter: /usr/bin/python3
  tasks:
   - name: Remove swapfile from /etc/fstab
     mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
     with_items:
        - swap
        - none
   - name: Disable swap
     command: swapoff -a
    # Install Docker and its dependent components.
    # [WARNING]: Could not find aptitude. Using apt-get instead fix
   - name: "APT: Install aptitude package"
     apt:
       name: aptitude
       force_apt_get: yes
   - name: Install packages that allow apt to be used over HTTPS
     apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
     vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        # - gnupg-agent
        - software-properties-common
   - name: Add an apt signing key for Docker
     apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
   - name: Add apt repository for stable version
     apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
   - name: Install docker and its dependecies
     apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
     vars:
      packages:
      - 'docker-ce{{ validated_dockerv }}'
      - 'docker-ce-cli{{ validated_dockerv }}'
      - containerd.io

   - name: add Kubernetes apt-key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present

   - name: add Kubernetes' APT repository
     apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'
   ## k8s-conformance sonobuoy test CLı, downgrading current package
   # - name: "remove package"
   #   apt: name=kubectl state=absent
   - name: "Remove packages"
     apt:
       name: "{{ packages }}"
       state: absent
       update_cache: yes
     vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl
   - name: "Install Kubernetes binaries"
     apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
     vars:
      packages:
        - 'kubelet{{ kubernetes_version }}'
        - 'kubeadm{{ kubernetes_version }}'
        - 'kubectl{{ kubernetes_version }}'
