- hosts: masters
  become: yes
  vars:
    # kubernetes_version : "=1.15.2-00"
    # validated_dockerv: "=5:18.09.8~3-0~ubuntu-xenial"
    kubernetes_version : "=1.14.5-00" # k8s-conformance sonobuoy test CLı
    validated_dockerv: "=5:18.09.5~3-0~ubuntu-xenial" # k8s-conformance sonobuoy test CLı
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none
    - name: Disable swap
      command: swapoff -a

    - name: initialize the cluster
      command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master01 --pod-network-cidr=192.168.0.0/16
      args:
        chdir: /home/vagrant
        creates: cluster_initialized.txt
    - name: create .kube directory
      become: yes
      become_user: vagrant
      file:
        path: /home/vagrant/.kube
        state: directory
        mode: 0755
    # copies the /etc/kubernetes/admin.conf file that was generated from kubeadm init
    # to your non-root user's home directory.This will allow you to use kubectl
    # to access the newly-created cluster.
    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: yes
        owner: vagrant
    # runs kubectl apply to install Flannel.kubectl to create the objects described in the descriptor.[yml|json] file.
    # The kube-flannel.yml file contains the descriptions of objects required for setting up Flannel in the cluster.
    - name: Install flannel Pod network
      become: yes
      become_user: vagrant
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml >> /home/vagrant/pod_network_setup.txt
      args:
        chdir: /home/vagrant
        creates: pod_network_setup.txt
